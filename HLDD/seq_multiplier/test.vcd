$date
    Dec 26, 2022  22:56:07
$end
$version
    TOOL:	ncsim(64)	15.20-s086
$end
$timescale
    1 ns
$end

$scope module regA_tb $end
$var reg       2 !    A [1:0] $end
$var reg       2 "    P [1:0] $end
$var reg       1 #    clk  $end
$var reg       1 $    loadA  $end
$var reg       2 %    B [1:0] $end
$var reg       2 &    Q [1:0] $end
$var reg       1 '    loadB  $end
$var reg       1 (    decB  $end
$var reg       2 )    product [1:0] $end
$var reg       1 *    loadF  $end
$var reg       1 +    clear  $end
$var reg       1 ,    zero  $end

$scope module dut $end
$var wire      1 -    clk  $end
$var wire      2 .    A [1:0] $end
$var wire      2 /    B [1:0] $end
$var wire      1 0    loadA  $end
$var wire      1 1    loadB  $end
$var wire      1 2    decB  $end
$var wire      1 3    loadF  $end
$var wire      1 4    clear  $end
$var reg       1 5    zero  $end
$var reg       4 6    product [3:0] $end
$var reg       2 7    P [1:0] $end
$var reg       2 8    Q [1:0] $end

$scope module r1 $end
$var wire      2 .    A [1:0] $end
$var wire      1 0    loadA  $end
$var wire      1 -    clk  $end
$var reg       2 9    P [1:0] $end
$upscope $end


$scope module r2 $end
$var wire      2 /    B [1:0] $end
$var wire      1 1    loadB  $end
$var wire      1 2    decB  $end
$var wire      1 -    clk  $end
$var reg       2 :    Q [1:0] $end
$upscope $end


$scope module r3 $end
$var wire      2 ;    P [1:0] $end
$var wire      2 <    Q [1:0] $end
$var wire      1 3    loadF  $end
$var wire      1 2    decB  $end
$var wire      1 -    clk  $end
$var reg       4 =    product [3:0] $end
$var reg       1 >    clear  $end
$upscope $end


$scope module r4 $end
$var wire      2 ?    B [1:0] $end
$var wire      1 -    clk  $end
$var reg       1 @    zero  $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b10 !
bx "
0#
x$
b11 %
bx &
x'
x(
bx )
x*
1+
x,
0-
b10 .
b11 /
x0
x1
x2
x3
14
x5
bx 6
bx 7
bx 8
bx 9
bx :
bx ;
bx <
bx =
x>
bx ?
x@
$end
#5
1#
1-
#10
0$
0'
0#
0-
01
00
#15
1#
1-
#20
1$
1'
0(
0#
0-
02
11
10
#25
1#
1-
b0 =
b10 :
b10 9
b10 7
b10 8
b0 6
b10 ?
b10 <
b10 ;
0@
b0 )
05
0,
#30
0#
0-
#35
1#
1-
#40
0#
0-
#45
1#
1-
#50
0'
1(
0+
0#
0-
04
12
01
#55
1#
1-
b10 =
b1 :
b1 8
b10 6
b1 ?
b1 <
b10 )
#60
0#
0-
#65
1#
1-
b100 =
b0 :
b0 8
b100 6
b0 ?
b0 <
1@
b0 )
15
1,
#70
0#
0-
#75
1#
1-
b0 =
b11 :
b11 8
b0 6
b11 ?
b11 <
0@
05
0,
#80
0#
0-
#85
1#
1-
b10 =
b10 :
b10 8
b10 6
b10 ?
b10 <
b10 )
#90
0#
0-
#95
1#
1-
b100 =
b1 :
b1 8
b100 6
b1 ?
b1 <
b0 )
#100
0#
0-
#105
1#
1-
b110 =
b0 :
b0 8
b110 6
b0 ?
b0 <
1@
b10 )
15
1,
#110
0#
0-
#115
1#
1-
b0 =
b11 :
b11 8
b0 6
b11 ?
b11 <
0@
b0 )
05
0,
#120
0#
0-
#125
1#
1-
b10 =
b10 :
b10 8
b10 6
b10 ?
b10 <
b10 )
#130
0#
0-
#135
1#
1-
b100 =
b1 :
b1 8
b100 6
b1 ?
b1 <
b0 )
#140
0#
0-
#145
1#
1-
b110 =
b0 :
b0 8
b110 6
b0 ?
b0 <
1@
b10 )
15
1,
#150
0#
0-
#155
1#
1-
b0 =
b11 :
b11 8
b0 6
b11 ?
b11 <
0@
b0 )
05
0,
#160
0#
0-
#165
1#
1-
b10 =
b10 :
b10 8
b10 6
b10 ?
b10 <
b10 )
#170
0#
0-
#175
1#
1-
b100 =
b1 :
b1 8
b100 6
b1 ?
b1 <
b0 )
#180
0#
0-
#185
1#
1-
b110 =
b0 :
b0 8
b110 6
b0 ?
b0 <
1@
b10 )
15
1,
#190
0#
0-
#195
1#
1-
b0 =
b11 :
b11 8
b0 6
b11 ?
b11 <
0@
b0 )
05
0,
#200
