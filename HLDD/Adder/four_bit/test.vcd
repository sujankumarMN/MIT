$date
    Nov  8, 2022  17:22:09
$end
$version
    TOOL:	ncsim(64)	15.20-s086
$end
$timescale
    1 ns
$end

$scope module FA_tb $end
$var reg       4 !    a [3:0] $end
$var reg       4 "    b [3:0] $end
$var reg       1 #    cin  $end
$var wire      1 $    sum [3] $end
$var wire      1 %    sum [2] $end
$var wire      1 &    sum [1] $end
$var wire      1 '    sum [0] $end
$var wire      1 (    cout  $end

$scope module dut $end
$var wire      1 )    a [3] $end
$var wire      1 *    a [2] $end
$var wire      1 +    a [1] $end
$var wire      1 ,    a [0] $end
$var wire      1 -    b [3] $end
$var wire      1 .    b [2] $end
$var wire      1 /    b [1] $end
$var wire      1 0    b [0] $end
$var wire      1 1    cin  $end
$var wire      1 $    sum [3] $end
$var wire      1 %    sum [2] $end
$var wire      1 &    sum [1] $end
$var wire      1 '    sum [0] $end
$var wire      1 (    cout  $end
$var wire      1 2    temp_carry [2] $end
$var wire      1 3    temp_carry [1] $end
$var wire      1 4    temp_carry [0] $end

$scope module f1 $end
$var wire      1 ,    a  $end
$var wire      1 0    b  $end
$var wire      1 1    c  $end
$var reg       1 5    sum  $end
$var reg       1 6    cout  $end
$var wire      1 7    ab  $end
$var wire      1 8    abc  $end
$var wire      1 9    a_b  $end

$scope module sum1 $end
$var wire      1 ,    a  $end
$var wire      1 0    b  $end
$var reg       1 :    y  $end
$upscope $end


$scope module sum2 $end
$var wire      1 9    a  $end
$var wire      1 1    b  $end
$var reg       1 ;    y  $end
$upscope $end


$scope module car1 $end
$var wire      1 9    a  $end
$var wire      1 1    b  $end
$var reg       1 <    y  $end
$upscope $end


$scope module car2 $end
$var wire      1 ,    a  $end
$var wire      1 0    b  $end
$var reg       1 =    y  $end
$upscope $end


$scope module car3 $end
$var wire      1 8    a  $end
$var wire      1 7    b  $end
$var reg       1 >    y  $end
$upscope $end

$upscope $end


$scope module f2 $end
$var wire      1 +    a  $end
$var wire      1 /    b  $end
$var wire      1 4    c  $end
$var reg       1 ?    sum  $end
$var reg       1 @    cout  $end
$var wire      1 A    ab  $end
$var wire      1 B    abc  $end
$var wire      1 C    a_b  $end

$scope module sum1 $end
$var wire      1 +    a  $end
$var wire      1 /    b  $end
$var reg       1 D    y  $end
$upscope $end


$scope module sum2 $end
$var wire      1 C    a  $end
$var wire      1 4    b  $end
$var reg       1 E    y  $end
$upscope $end


$scope module car1 $end
$var wire      1 C    a  $end
$var wire      1 4    b  $end
$var reg       1 F    y  $end
$upscope $end


$scope module car2 $end
$var wire      1 +    a  $end
$var wire      1 /    b  $end
$var reg       1 G    y  $end
$upscope $end


$scope module car3 $end
$var wire      1 B    a  $end
$var wire      1 A    b  $end
$var reg       1 H    y  $end
$upscope $end

$upscope $end


$scope module f3 $end
$var wire      1 *    a  $end
$var wire      1 .    b  $end
$var wire      1 3    c  $end
$var reg       1 I    sum  $end
$var reg       1 J    cout  $end
$var wire      1 K    ab  $end
$var wire      1 L    abc  $end
$var wire      1 M    a_b  $end

$scope module sum1 $end
$var wire      1 *    a  $end
$var wire      1 .    b  $end
$var reg       1 N    y  $end
$upscope $end


$scope module sum2 $end
$var wire      1 M    a  $end
$var wire      1 3    b  $end
$var reg       1 O    y  $end
$upscope $end


$scope module car1 $end
$var wire      1 M    a  $end
$var wire      1 3    b  $end
$var reg       1 P    y  $end
$upscope $end


$scope module car2 $end
$var wire      1 *    a  $end
$var wire      1 .    b  $end
$var reg       1 Q    y  $end
$upscope $end


$scope module car3 $end
$var wire      1 L    a  $end
$var wire      1 K    b  $end
$var reg       1 R    y  $end
$upscope $end

$upscope $end


$scope module f4 $end
$var wire      1 )    a  $end
$var wire      1 -    b  $end
$var wire      1 2    c  $end
$var reg       1 S    sum  $end
$var reg       1 T    cout  $end
$var wire      1 U    ab  $end
$var wire      1 V    abc  $end
$var wire      1 W    a_b  $end

$scope module sum1 $end
$var wire      1 )    a  $end
$var wire      1 -    b  $end
$var reg       1 X    y  $end
$upscope $end


$scope module sum2 $end
$var wire      1 W    a  $end
$var wire      1 2    b  $end
$var reg       1 Y    y  $end
$upscope $end


$scope module car1 $end
$var wire      1 W    a  $end
$var wire      1 2    b  $end
$var reg       1 Z    y  $end
$upscope $end


$scope module car2 $end
$var wire      1 )    a  $end
$var wire      1 -    b  $end
$var reg       1 [    y  $end
$upscope $end


$scope module car3 $end
$var wire      1 V    a  $end
$var wire      1 U    b  $end
$var reg       1 \    y  $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b1010 !
b1 "
1#
1$
1%
0&
0'
0(
1)
0*
1+
0,
0-
0.
0/
10
11
02
13
14
05
16
07
18
19
1:
0;
1<
0=
1>
0?
1@
0A
1B
1C
1D
0E
1F
0G
1H
1I
0J
0K
0L
0M
0N
1O
0P
0Q
0R
1S
0T
0U
0V
1W
1X
1Y
0Z
0[
0\
$end
#5
b1000 !
b10 "
1/
00
0+
0:
09
0<
1;
08
15
0>
1'
06
04
0F
1E
0B
1?
0H
1&
0@
03
0O
0I
0%
#10
b1111 !
b1 "
0/
10
1*
1+
1,
1=
1N
1M
17
1O
1>
16
1I
1%
14
1F
0E
1B
0?
1H
0&
1@
13
1P
0O
1L
0I
1R
0%
1J
12
1Z
0Y
1V
0S
1\
0$
1T
1(
#15
b1001 !
b1001 "
1-
0*
0+
1[
0X
0N
0D
0C
0M
0W
1U
0F
1E
0P
1O
0Z
1Y
0V
0L
0B
1S
1I
0R
1?
0H
1&
1%
1$
0@
0J
02
03
0Y
0O
0I
0S
0$
0%
#20
